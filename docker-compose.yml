version: "3.9"

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"

  backend:
    build:
      dockerfile: ./Dockerfile
      context: ./
    container_name: backend
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "./manage.py collectstatic --noinput && 
      ./manage.py makemigrations users Resume Hackaton Score&& 
      ./manage.py migrate && 
      ./manage.py initadmin && 
      gunicorn -b 0.0.0.0:8000 app.wsgi:application"

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./.docker/nginx/
    container_name: nginx
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"

volumes:
  static_volume:
  media_volume:
  postgres_storage: