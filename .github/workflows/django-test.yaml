name: HackatonService Testing
on:
  push:
  pull_request:

jobs:
  run_unittests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Run tests
        run: |
            echo 'SECRET_KEY=dsadasidqjwirfjqpoifjasfnasfasd' > ./app/.env
            echo 'DEBUG=false' >> ./app/.env
            echo 'DATABASE_NAME=postgres' >> ./app/.env
            echo 'DATABASE_USER=postgres' >> ./app/.env
            echo 'DATABASE_PASSWORD=postgres' >> ./app/.env
            echo 'DATABASE_HOST=localhost' >> ./app/.env
            echo 'DATABASE_PORT=5433' >> ./app/.env
          
            echo 'DATABASE_NAME=postgres' > ./.env
            echo 'DATABASE_USER=postgres' >> ./.env
            echo 'DATABASE_PASSWORD=postgres' >> ./.env
          
            chmod +x setup_env.sh
            ./setup_env.sh

            docker-compose up -d postgres
          
            python manage.py test Resume.tests.Resume_tests
            python manage.py test Resume.tests.Contact_tests
            python manage.py test Resume.tests.Education_tests
            python manage.py test Resume.tests.Graduation_tests
            python manage.py test Resume.tests.Hackatons_tests
            python manage.py test Resume.tests.Work_tests
            python manage.py test Score.tests.HistoryPoint_tests
            python manage.py test Score.tests.PointCondition_tests

        # добавить тесты для users, hackaton
