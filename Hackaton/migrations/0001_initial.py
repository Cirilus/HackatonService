# Generated by Django 4.2.7 on 2024-02-27 06:56

import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hackaton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('image_url', models.FileField(upload_to='hackatons/')),
                ('description', models.TextField()),
                ('description_short', models.TextField()),
                ('creator', models.CharField(max_length=150)),
                ('start_registration', models.DateTimeField(default=datetime.datetime.now)),
                ('end_registration', models.DateTimeField()),
                ('start', models.DateTimeField(default=datetime.datetime.now)),
                ('end', models.DateTimeField()),
                ('grand_prize', models.CharField(blank=True, max_length=150)),
                ('roles', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=150), default=list, size=None)),
                ('location', models.CharField(blank=True, max_length=150)),
                ('is_online', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hackaton_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField()),
                ('hackaton', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Hackaton.hackaton')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'hackaton')},
            },
        ),
        migrations.CreateModel(
            name='Parser_Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='Нет данных', max_length=255, verbose_name='Название хакатона')),
                ('image_url', models.URLField(max_length=500, verbose_name='Ссылка на изображение')),
                ('creator', models.CharField(blank=True, default='Нет данных', verbose_name='Организаторы хакатона')),
                ('grand_prize', models.TextField(blank=True, default='Нет данных', verbose_name='Призовой фонд')),
                ('end_registration', models.CharField(blank=True, default='Нет данных', max_length=255, verbose_name='Конец регистрации на хакатон')),
                ('about', models.TextField(blank=True, default='Нет данных', verbose_name='Технологический фокус хакатона')),
                ('target_audience', models.TextField(blank=True, default='Нет данных', verbose_name='Для кого хакатон')),
                ('date_hackaton', models.CharField(blank=True, default='Нет данных', max_length=255, verbose_name='Даты проведения хакатона')),
                ('location', models.CharField(blank=True, default='Нет данных', max_length=255, null=True, verbose_name='Место проведения хакатона')),
                ('is_online', models.BooleanField(blank=True, default=False, verbose_name='Будет ли возможность онлайн участия')),
                ('hackaton_link', models.URLField(max_length=255, verbose_name='Ссылка на хакатон')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('hackaton', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Hackaton.hackaton')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Hackaton.hackaton_user')),
            ],
        ),
        migrations.CreateModel(
            name='User_Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_invited', models.BooleanField(default=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Hackaton.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Hackaton.hackaton_user')),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('hackaton', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='Hackaton.hackaton')),
            ],
        ),
        migrations.CreateModel(
            name='JoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('accept', 'accept'), ('pending', 'pending'), ('decline', 'decline')], default='pending', max_length=15)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hackaton.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hackaton.hackaton_user')),
            ],
        ),
    ]
